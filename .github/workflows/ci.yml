name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    name: Test MCP Servers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint:check

    - name: Run tests
      run: npm test

    - name: Test MCP server startup
      run: |
        cd playwright-mcp-server
        timeout 10s npm start || true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate --workspaces || true

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [test, security]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build and package
      run: |
        npm run lint
        npm test

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## üöÄ MCP DevOps Server Release v${{ github.run_number }}

          ### ‚ú® What's New
          - Enhanced MCP server with 13 powerful DevOps tools
          - Improved testing and linting capabilities
          - Better documentation and examples

          ### üîß Tech Stack Support
          - React + Vite + TailwindCSS + Shadcn
          - Rust + Tauri desktop applications
          - TypeScript + ESLint integration

          ### üõ†Ô∏è Tools Included
          - Security auditing and vulnerability scanning
          - Code quality analysis and formatting
          - Performance testing with Lighthouse
          - CI/CD pipeline validation
          - Docker container building
          - Rust development tools
          - Tauri desktop app tools

          ### üì¶ Installation
          ```bash
          npm install
          npm test
          npm start
          ```

          ### ü§ù Contributing
          We welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details.
        draft: false
        prerelease: false

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: mcp-devops-server:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    if: failure()
    needs: [test, security]
    steps:
    - name: Send notification
      run: |
        echo "üö® CI/CD Pipeline Failed"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref }}"
        echo "Run: ${{ github.run_id }}"
        echo "Check the logs for more details."